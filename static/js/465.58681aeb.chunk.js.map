{"version":3,"file":"static/js/465.58681aeb.chunk.js","mappings":"gOACA,EAAuB,wBAAvB,EAA4D,8BAA5D,EAAmG,0B,SCmDnG,EA/CkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAc9B,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAaC,SAbX,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,GACEa,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACP,EAGwDC,aAAa,MAAKC,SAAA,EACtEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,UACEC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEf,UAAWC,EACXgB,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRC,YAAY,eAIlBL,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,UACEC,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,SACEf,UAAWC,EACXgB,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRC,YAAY,kBAIlBL,EAAAA,EAAAA,KAAA,UAAQf,UAAWC,EAAegB,KAAK,SAASI,SAAUzB,EAAUkB,SAAC,aAK3E,EC/Ce,SAASQ,IACtB,OACEvB,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAT,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAACS,EAAS,MAGhB,C,8ICVaC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACrChC,EAAgB,SAAA4B,GAAK,OAAIA,EAAM9B,SAAU,EAMzCmC,GAAsBC,EAAAA,EAAAA,IACjC,CAHkB,SAAAN,GAAK,OAAIA,EAAMC,SAASC,KAAM,EADhC,SAAAF,GAAK,OAAIA,EAAMI,MAAO,IAKtC,SAACH,EAAUG,GACT,GAAKH,EACL,OAAOA,EAASG,QAAO,SAAAG,GAAI,OACzBA,EAAKf,KAAKgB,cAAcC,OAAOC,SAASN,EAAOI,cAAcC,OAAO,GAExE,G","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx","reduxx/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"inputField\":\"LoginForm_inputField__1zwZE\",\"button\":\"LoginForm_button__LodJg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'reduxx/auth/operations/operation';\nimport { selectLoading } from 'reduxx/contacts/selectors';\nimport styles from './LoginForm.module.css';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <>\n        <label>\n          <input\n            className={styles.inputField}\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder=\"Email\"\n          />\n        </label>\n      </>\n      <>\n        <label>\n          <input\n            className={styles.inputField}\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"Password\"\n          />\n        </label>\n      </>\n      <button className={styles.button} type=\"submit\" disabled={isLoading}>\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { Helmet } from 'react-helmet';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectLoading = state => state.isLoading;\nexport const selectError = state => state.contacts.error;\n\nconst getFilter = state => state.filter;\nconst getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(item =>\n      item.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n\n// export const getIsLoading = state => state.contacts.isLoading;\n// export const getStatusFilter = state => state.filter.status;\n"],"names":["dispatch","useDispatch","isLoading","useSelector","selectLoading","_jsxs","className","styles","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","children","_jsx","_Fragment","type","name","required","placeholder","disabled","Login","Helmet","LoginForm","selectContacts","state","contacts","items","selectFilter","filter","getFilteredContacts","createSelector","item","toLowerCase","trim","includes"],"sourceRoot":""}