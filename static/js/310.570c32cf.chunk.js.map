{"version":3,"file":"static/js/310.570c32cf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx","reduxx/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactUser\":\"ContactList_contactUser__-dJIC\",\"user\":\"ContactList_user__67mX+\",\"wrapper\":\"ContactList_wrapper__VP-XU\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactInfo\":\"ContactList_contactInfo__Sgq6p\"};","import styles from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'reduxx/contacts/operations/contactsThunk';\nimport { getFilteredContacts, selectContacts } from 'reduxx/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getFilteredContacts);\n  const users = useSelector(selectContacts);\n  return (\n    <>\n      <h3 className={styles.contactInfo}>\n        Your phonebook has {users.length} contacts\n      </h3>\n      <hr />\n      <ul className={styles.contactList}>\n        {contacts.map(item => (\n          <li key={item.id} className={styles.contactUser}>\n\t\t\t\t\t\t<div className={styles.wrapper}>\n            <p className={styles.user}>\n              <b className={styles.userName}>{item.name}</b>\n            </p>\n            <span>{item.number}</span></div>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContactThunk(item.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"inputField\":\"ContactForm_inputField__qJkou\",\"button\":\"ContactForm_button__eSwX9\"};","import styles from './ContactForm.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'reduxx/contacts/operations/contactsThunk';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from 'reduxx/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isInContact = contacts.some(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n    if (isInContact) {\n      Notify.warning(`This contact has already exists`);\n      return;\n    }\n\n    const newObj = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    dispatch(addContactThunk(newObj));\n\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n      <label>\n        <input\n          className={styles.inputField}\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label>\n        <input\n          className={styles.inputField}\n          placeholder=\"Phone number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.button}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputField\":\"Filter_inputField__GiGjH\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'reduxx/contacts/filterSlice';\nimport { selectFilter } from 'reduxx/contacts/selectors';\n\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const showFilteredContacts = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <div>\n      <hr />\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"Find contacts by name...\"\n          value={filter}\n          onChange={showFilteredContacts}\n          className={styles.inputField}\n        />\n      </label>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { getContactsThunk } from 'reduxx/contacts/operations/contactsThunk';\nimport { selectLoading } from 'reduxx/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectLoading = state => state.isLoading;\nexport const selectError = state => state.contacts.error;\n\nconst getFilter = state => state.filter;\nconst getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(item =>\n      item.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n\n// export const getIsLoading = state => state.contacts.isLoading;\n// export const getStatusFilter = state => state.filter.status;\n"],"names":["ContactList","dispatch","useDispatch","contacts","useSelector","getFilteredContacts","users","selectContacts","_jsxs","_Fragment","children","className","styles","length","_jsx","map","item","name","number","type","onClick","deleteContactThunk","id","ContactForm","onSubmit","e","preventDefault","some","contact","toLowerCase","target","elements","value","Notify","newObj","addContactThunk","reset","autoComplete","placeholder","pattern","title","required","Filter","filter","selectFilter","onChange","filterContacts","Tasks","isLoading","selectLoading","useEffect","getContactsThunk","Helmet","state","items","createSelector","trim","includes"],"sourceRoot":""}